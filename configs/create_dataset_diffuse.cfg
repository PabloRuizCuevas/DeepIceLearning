[Basics]
# low energy von 100 GeV-5 TeV, medium von 5 TeV-100 PeV
MC_path0 = /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11029_00000-01999
MC_path1 = /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11069_00000-00999
MC_path2 = /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11070_00000-00999

thisfolder = /data/user/tglauch/DeepIceLearning
geometry_file = /cvmfs/icecube.opensciencegrid.org/data/GCD/GeoCalibDetectorStatus_2013.56429_V0.i3.gz
icetray_path = /data/user/tglauch/Software/combo/build/env-shell.sh
python_env = /data/user/tglauch/DeepIceLearning/python_env/bin/activate

out_folder = /data/user/tglauch/trainings_data/diffuse/
dagman_folder = /data/user/tglauch/trainings_data/diffuse/dag/
logger_path = /data/user/tglauch/trainings_data/diffuse/log/
input_shape = auto

PulseSeriesMap = InIceDSTPulses

Waveforms = InIceRawData

## give a comma seperated list of foldes in MC_path to be processed, if 'allinmcpath' use all folders
folder_list = allinmcpath

## give a comma seperated list of files to search for in subfolders of MC_path. If 'allinfolder' use all files.
### use standart unix syntax for using files matching a special regular expression, e.g. *numu*
file_list = allinfolder


### use name charges (=pulses) times and widths (pulse width) to define input slices
[Input_Charges]
charge = np.sum(charges)
first_charge = charges[0]
charge_last = charges[-1]
num_pulses = len(charges)


[Input_Times]
time_first = np.amin(times) 
time_last = np.amax(times)
time_spread = np.amax(times)-np.amin(times)
time_std = np.std(times)
time_weighted_median = median(times, charges)


[Input_Pulses]
ignore = False
step_size_pulses = 0.05

[Input_Waveforms1]
ignore = True

[Cuts]
# maximum energy of events [GeV]
#max_energy_cut = OFF
#max_energy_cutoff = 100000000


[Variables]
trunc_E = ['SplineMPEICTruncatedEnergySPICEMie_AllDOMS_Muon'].energy
muex = ['SplineMPEMuEXDifferential'].energy
spline_mpe_zenith = ['SplineMPE'].dir.zenith
spline_mpe_azimuth = ['SplineMPE'].dir.azimuth
spline_mpe_x = ['SplineMPE'].dir.x
spline_mpe_y = ['SplineMPE'].dir.y
spline_mpe_z = ['SplineMPE'].dir.z
mpe_zenith = ['MPEFitIC'].dir.zenith
mpe_azimuth = ['MPEFitIC'].dir.azimuth
mpe_x = ['MPEFitIC'].dir.x
mpe_y = ['MPEFitIC'].dir.y
mpe_z = ['MPEFitIC'].dir.z
linefit_zenith = ['LineFitIC'].dir.zenith
linefit_azimuth = ['LineFitIC'].dir.azimuth
linefit_x = ['LineFitIC'].dir.x
linefit_y = ['LineFitIC'].dir.y
linefit_z = ['LineFitIC'].dir.z
cog_z = ['L5_cog_z'].value
cog_rho = ['L5_cog_rho'].value
ldir_c = ['L5_ldir_c'].value
lsepr = ['L5_lseparation'].value
ow = ['I3MCWeightDict']['OneWeight']
ev_id = ['I3EventHeader'].event_id
run_id = ['I3EventHeader'].run_id
rlogl = ['L5_rlogl'].value
nch = ['L5_nch'].value
sdir_e = ['L5_sdir_e'].value
avg_dist_q = ['BestTrack_AvgDistQ'].value
pbf_err1 = ['SplineMPEICParaboloidFitParams'].pbfErr1
pbf_err2 = ['SplineMPEICParaboloidFitParams'].pbfErr2
pbf_center_llh = ['SplineMPEICParaboloidFitParams'].pbfCenterLlh
pbf_rot_ang = ['SplineMPEICParaboloidFitParams'].pbfRotAng
casc_score = ['CascScore'].value
n_pulses = ['HitMultiplicityValues'].n_pulses
n_hit_doms = ['HitMultiplicityValues'].n_hit_doms
muex_sigma = ['MuEXAngular4_Sigma'].value
mpe_pbf_err1 = ['MPEFitParaboloidFitParams'].pbfErr1
mpe_pbf_err2 = ['MPEFitParaboloidFitParams'].pbfErr2
mpe_pbf_center_llh = ['MPEFitParaboloidFitParams'].pbfCenterLlh
mpe_pbf_rot_ang = ['MPEFitParaboloidFitParams'].pbfRotAng
true_zen = ['MCPrimary1'].dir.zenith
true_az = ['MCPrimary1'].dir.azimuth
true_x = ['MCPrimary1'].dir.x
true_y = ['MCPrimary1'].dir.y
true_z = ['MCPrimary1'].dir.z
true_E = ['MCPrimary1'].energy
cr_phi = ['BestTrackCramerRaoParams'].cramer_rao_phi
cr_theta = ['BestTrackCramerRaoParams'].cramer_rao_theta
cr_cov = ['BestTrackCramerRaoParams'].covariance_theta_phi
corsika_mult = ['CorsikaWeightMap']['Multiplicity']
inter_type = ['I3MCWeightDict']['InteractionType']
p_int = ['I3MCWeightDict']['TotalWeight']
p_type = ['I3MCWeightDict']['PrimaryNeutrinoType']
mu_dir_x = ['Reconstructed_Muon'].dir.x
mu_dir_y = ['Reconstructed_Muon'].dir.y
mu_dir_z = ['Reconstructed_Muon'].dir.z
mu_zenith = ['Reconstructed_Muon'].dir.zenith
mu_azimuth = ['Reconstructed_Muon'].dir.azimuth
mu_E_on_entry = ['mu_E_on_entry'].value
mu_E_deposited = ['mu_E_deposited'].value

[Functions]
mp_highest_loss = millipede_rel_highest_loss
mp_n_losses = millipede_n_losses
mp_std = millipede_std
mp_max_loss = millipede_max_loss
