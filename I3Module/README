This I3Module can be used to perform a DeepLearning Classification on IceCube events. There are two ways to run
this module as explained below.  Report any problems to Theo Glauch (theo.glauch@tum.de). Note that the module is 
currently optimized for running the Deep Learning predictions on the GPU, this is currently limiting speed.


# Requirements of the module

The module requires an installation of icerec as well as a short list of python modules:
- tensorflow
- configparser
- numpy
- scipy


# How to install the module

Before the installation of the required packages copy all the files of the I3Module to a personal folder of your choice. Afterwards create a virtualenv based on your IceCube software version of choice. The following is an example installation (last tested on 2019-07-16):

    1. source /cvmfs/icecube.opensciencegrid.org/py2-v3.0.1/RHEL_7_x86_64/metaprojects/icerec/V05-02-03/env-shell.sh
    2. virtualenv -p /cvmfs/icecube.opensciencegrid.org/py2-v3.0.1/RHEL_7_x86_64/bin/python venv
    3. source venv/bin/activate
    4. pip install tensorflow numpy scipy configparser
    5. change the PYTHONPATH in the i3module.sh to your venv site-packages location, e.g. /A/B/venv/lib/python2.7/site-packages  
    6. start a clean shell
    7. run the script as explaind below in 1.)

Remark: In case you get the error `ImportError: No module named google.protobuf` just add an __init__.py to the google.protobuf installation in your
        site-packages by running something like: 
        
        touch /A/B/venv/lib/python2.7/site-packages/google/__init__.py

# How to use the module

1.) Run the script directly using

    bash i3module.sh --files path_file1 path_file2 ...

    example: bash i3module.sh --files /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11029_00000-01999/FinalLevel_NuMu_IC86-2018_168.i3.zst

    For each event run and evend number as well as the Deep Learning prediction are printed.
    The output contains the p-scores for each class in the form of 
    [[skimming, cascade, through going track, starting track, stopping track]]


2.) Include the module in another icetray script by importing from i3module.py

    from i3module import DeepLearningClassifier


 
